#!/bin/sh
# ee - edit encrypted
# wrapper around gpg to edit encrypted files with $EDITOR

ed="$EE_EDITOR"
[ ! "$ed" ] && ed="$EDITOR"
[ ! "$ed" ] && ed="nvim"

# {{{ handle input
# get file info and a temporary file name
[ ! "$1" ] && echo 'usage: ee <file>' && exit 1

file="$1"
tmp="$(mktemp -u).$(basename "$file")"

[ -e "$file" ] # file exists?
file_exists=$?

file -b "$file" | grep -Eq '^GPG symmetrically encrypted data \(AES256 cipher\)$' # file is encrypted?
file_is_enc=$?
# }}}

# {{{ decrypt
# if it is encrypted, decrypt it
if [ $file_is_enc -eq 0 ]; then
    #                                                                            exit 1 on error
    gpg --output "$tmp" -d --cipher-algo AES256 --pinentry-mode loopback --no-symkey-cache "$file" || exit 1
fi

# if it did NOT get decrypted AND it exists, just edit it normally and exit
if [ $file_is_enc -ne 0 ] && [ $file_exists -eq 0 ]; then
#                   exit after
    $EDITOR "$file" && exit 0
fi
# }}}

# {{{ edit
[ $file_is_enc -eq 0 ] && cp "$tmp" "$tmp.orig" # if it did get decrypted, copy tmp to another tmpfile for comparison

# shellcheck disable=2086
set -- $ed
"$@" "$tmp" # open editor
# }}}

# {{{ encrypt
[ $file_is_enc -eq 0 ] || [ ! -e "$file" ] # original file got decrypted OR original file does not exist?
should_enc=$?

[ -e "$tmp" ] # tmpfile exists?
tmp_exists=$?

! diff -Nq "$tmp" "$tmp.orig" > /dev/null 2>&1 # tmpfile differs from the tmpfile copy?
tmp_modified=$?

file -b "$tmp" | grep -Eqv '^empty$|^very short file \(no magic\)$' # tmpfile NOT empty or short?
tmp_empty=$?

# if all those conditions are met, encrypt
[ $should_enc -eq 0 ] && [ $tmp_exists -eq 0 ] && [ $tmp_modified -eq 0 ] && [ $tmp_empty -eq 0 ] &&\
    gpg --output "$file" -c --cipher-algo AES256 --pinentry-mode loopback --no-symkey-cache "$tmp"
# }}}

# {{{ cleanup
# remove tmpfiles
rm -f "$tmp" "$tmp.orig"
# }}}
