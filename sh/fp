#!/bin/sh
# fp - file picker
# pick files with fzf and open dragon-drop with them

usage() {
    echo 'usage: fp [location] [pattern to exclude] [previewer program]'
}

bgr() { # background runner function
    nohup "$@" > /dev/null 2>&1 & # make immune to hangups, silence output, and run in background
}

# {{{ arg parsing (TODO: make it take real opts and flags)
# get location
location="./"
[ "$1" ] && location="$(realpath "$1")/" && shift

# escaped
escaped="$(echo "$location" | sed -e 's/\./\\./g' -e 's/\//\\\//g')"

# get exclude pattern
exclude_pattern="^$"
[ "$1" ] && exclude_pattern="$1" && shift

# get previewer program
preview="preview"
[ "$1" ] && preview="$(realpath "$1")" && shift

# get sorter program
sorter="sort"
[ "$1" ] && sorter="$(which "$1")" && shift
# }}}

# {{{ main
# find files in provided location
printf "finding files\r"
raw_files="$(find "$location" -type f -printf '%T@ %p\n' 2> /dev/null)"

# sort by time modified
sorted_files="$(echo "$raw_files" | "$sorter")"

# remove time modified and shorten path
pretty_files="$(echo "$sorted_files" | sed "s/^[0-9]*\\.[0-9]* $escaped//")"

# exclude files based on the provided exclude pattern
files_excluded="$(echo "$pretty_files" | grep -Ev -e "$exclude_pattern")"

# open fzf
fzf_results="$(echo "$files_excluded" | fzf -m --tac --bind "ctrl-space:execute-silent($preview '$location'{}),alt-bs:execute-silent($preview '' kill)")"
# exit early if cancelled
[ ! "$fzf_results" ] && exit 0

# add back long path to prevent weird things from happening
full_results="$(echo "$fzf_results" | awk '{ print "'"$location"'" $0 }')"

# run dragon
# shellcheck disable=SC2086 # word splitting is intentional here
bgr dragon-drop -T -s 64 $full_results
# }}}
